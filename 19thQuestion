//Find Missing and repeated number in array?

//using Hash Array

vector<int> findMissingRepeatingNumbers(vector < int > a) {
    int n = a.size();
    int hash[n + 1] = {0};
    for(int i = 0 ; i<n ; i++){
        hash[a[i]]++;
    }
    int rep = -1;
    int mis = -1;
    for(int i = 1 ; i <= n ; i++){
        if(hash[i] == 2){
            rep = i;
        }
        else if(hash[i] == 0){
            mis = i;
        }
    }
    return {rep , mis};
}

OR

vector<int> findMissingRepeatingNumbers(vector < int > a) {
    long long n = a.size();
    long long sn = (n*(n+1)) / 2;//for iterative sum;
    long long s2n = (n*(n+1)*(2*n+1)) / 6;//for iterative square sum;
    long long s = 0 , s2 = 0;
    for(int i = 0 ; i < n ; i++){
        s+=a[i];
        s2+=(long long)a[i] * (long long)a[i];
    }
    long long eq1 = s - sn;
    long long eq2 = s2 - s2n;
    eq2 = eq2 / eq1;
    long long x = (eq1 + eq2) / 2;
    long long y = x - eq1;
    return {(int)x , (int)y};
    
}
