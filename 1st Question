//when no duplicates in the array.
#include <bits/stdc++.h>
using namespace std;
int Searching_Sort_Rot(int arr[] , int size , int key){
    int s = 0;
    int e = size - 1;
    while(s<=e){
        int mid = s + (e - s) / 2;
        if(arr[mid] == key) return mid;
        if(arr[s] <= arr[mid]){
            if(key >= arr[s] && key<=arr[mid]){
                e = mid - 1;
            }
            else{
                s = mid + 1;
            }
        }
        else{
            if(arr[mid] <= arr[e]){
                if(key >= arr[mid] && key <= arr[e]){
                    s = mid + 1;
                }
                else{
                    e = mid - 1;
                }
            }
        }
    }
    return 0;
}   
int main(){
    int arr[5] = {4,5,1,2,3};
    int index = Searching_Sort_Rot(arr , 5 , 2);
    cout << "index of 2: " << index;
    return 0;
}
//when duplicates in the array.

#include <bits/stdc++.h>
using namespace std;
int srtr(int arr[] , int size , int t){
    int s = 0;
    int e = size - 1;
    while(s<=e){
        int mid = s + (e - s) / 2;
        if(arr[mid] == t){
            return mid;
        }
        if(arr[s] == arr[mid] && arr[mid] == arr[e]){
            s++;
            e--;
            continue;
        }
        if(arr[s] <= arr[mid]){
            if(t>=arr[s] and t<=arr[mid]){
                e = mid - 1;
            }
            else{
                s = mid + 1;
            }
        }
        else{
            if(t>=arr[mid] and t<=arr[e]){
                s = mid + 1;
            }
            else{
                e = mid - 1;
            }
        }
    }
    return -1;
}
int main(){
    int arr[7] = {3,3,3,3,3,1,3};
    int t = 1;
    cout << srtr(arr , 7 , t);

}
